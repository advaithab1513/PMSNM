<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="37633" started-at="2019-05-17T19:09:47Z" finished-at="2019-05-17T19:10:24Z">
    <groups>
      <group name="smoke">
        <method signature="ValidatePMLoginCredentials.invalidPMUsernameInvalidPassword(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="invalidPMUsernameInvalidPassword" class="com.pm.test.ValidatePMLoginCredentials"/>
        <method signature="ValidatePMLoginCredentials.validatePMValidLoginCredentails(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="validatePMValidLoginCredentails" class="com.pm.test.ValidatePMLoginCredentials"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Default test" duration-ms="37633" started-at="2019-05-17T19:09:47Z" finished-at="2019-05-17T19:10:24Z">
      <class name="com.pm.test.ValidatePMLoginCredentials">
        <test-method status="PASS" signature="initializeGlobalValues()[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="initializeGlobalValues" is-config="true" duration-ms="1164" started-at="2019-05-17T19:09:46Z" finished-at="2019-05-17T19:09:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeGlobalValues -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-05-17T19:09:47Z" finished-at="2019-05-17T19:09:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="beforeMethod" is-config="true" duration-ms="7168" started-at="2019-05-17T19:09:47Z" finished-at="2019-05-17T19:09:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pm.test.ValidatePMLoginCredentials.invalidPMUsernameInvalidPassword(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidPMUsernameInvalidPassword(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="invalidPMUsernameInvalidPassword" duration-ms="1480" started-at="2019-05-17T19:09:54Z" finished-at="2019-05-17T19:09:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pm.test.ValidatePMLoginCredentials.invalidPMUsernameInvalidPassword(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPMUsernameInvalidPassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="afterMethod" is-config="true" duration-ms="1217" started-at="2019-05-17T19:09:56Z" finished-at="2019-05-17T19:09:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPMUsernameInvalidPassword status=SUCCESS method=ValidatePMLoginCredentials.invalidPMUsernameInvalidPassword(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="beforeMethod" is-config="true" duration-ms="5861" started-at="2019-05-17T19:09:57Z" finished-at="2019-05-17T19:10:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pm.test.ValidatePMLoginCredentials.invalidPMUsernameValidPassword(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidPMUsernameValidPassword(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="invalidPMUsernameValidPassword" duration-ms="1327" started-at="2019-05-17T19:10:03Z" finished-at="2019-05-17T19:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pm.test.ValidatePMLoginCredentials.invalidPMUsernameValidPassword(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPMUsernameValidPassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="afterMethod" is-config="true" duration-ms="1223" started-at="2019-05-17T19:10:04Z" finished-at="2019-05-17T19:10:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPMUsernameValidPassword status=SUCCESS method=ValidatePMLoginCredentials.invalidPMUsernameValidPassword(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="beforeMethod" is-config="true" duration-ms="6260" started-at="2019-05-17T19:10:05Z" finished-at="2019-05-17T19:10:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pm.test.ValidatePMLoginCredentials.validPMUsernameInvalidPassword(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validPMUsernameInvalidPassword(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="validPMUsernameInvalidPassword" duration-ms="1459" started-at="2019-05-17T19:10:11Z" finished-at="2019-05-17T19:10:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pm.test.ValidatePMLoginCredentials.validPMUsernameInvalidPassword(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPMUsernameInvalidPassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="afterMethod" is-config="true" duration-ms="1144" started-at="2019-05-17T19:10:13Z" finished-at="2019-05-17T19:10:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validPMUsernameInvalidPassword status=SUCCESS method=ValidatePMLoginCredentials.validPMUsernameInvalidPassword(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="beforeMethod" is-config="true" duration-ms="6691" started-at="2019-05-17T19:10:14Z" finished-at="2019-05-17T19:10:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pm.test.ValidatePMLoginCredentials.validatePMValidLoginCredentails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validatePMValidLoginCredentails(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="validatePMValidLoginCredentails" duration-ms="2057" started-at="2019-05-17T19:10:21Z" finished-at="2019-05-17T19:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pm.test.ValidatePMLoginCredentials.validatePMValidLoginCredentails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePMValidLoginCredentails -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335]" name="afterMethod" is-config="true" duration-ms="1705" started-at="2019-05-17T19:10:23Z" finished-at="2019-05-17T19:10:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePMValidLoginCredentails status=SUCCESS method=ValidatePMLoginCredentials.validatePMValidLoginCredentails(java.lang.reflect.Method)[pri:0, instance:com.pm.test.ValidatePMLoginCredentials@49993335] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.pm.test.ValidatePMLoginCredentials -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
